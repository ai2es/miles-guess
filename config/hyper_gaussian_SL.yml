log: True
save_path: "/glade/work/schreck/repos/evidential/main/results/0413_sl/gaussian"

pbs:
  jobs: 15
  bash: [
      "source ~/.bashrc", 
      "module unload cuda cudnn", 
      "conda activate evidential", 
      'CUDNN_PATH=$(dirname $(python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)"))', 
      'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA_PREFIX/lib/:$CUDNN_PATH/lib', 
      'export XLA_FLAGS=--xla_gpu_cuda_data_dir=$CONDA_PREFIX'
        ]
  batch:
    N: "gauss-sl"
    l: ["select=1:ncpus=8:ngpus=1:mem=128GB", "walltime=12:00:00", "gpu_type=v100"]
    A: "NAML0001"
    q: "casper"
    o: "out"
    e: "out"
    
optuna:
  storage: "study.db"
  study_name: "gaussian"
  storage_type: "sqlite"
  objective: "/glade/work/schreck/repos/evidential/main/applications/train_gaussian_SL.py"
  direction: "maximize"
  metric: "val_pitd"
  n_trials: 1000
  gpu: True
  sampler:
    type: "TPESampler"
    n_startup_trials: 100
  parameters:
    model:lr:
      type: "loguniform"
      settings:
        name: "lr"
        low: 1.0e-06
        high: 1.0e-02
    model:l2_weight:
      type: "loguniform"
      settings:
        name: "l2_weight"
        low: 1.0e-12
        high: 1.0e-02
    model:hidden_layers:
      type: "int"
      settings:
        name: "hidden_layers"
        low: 1
        high: 10
    model:hidden_neurons:
      type: "int"
      settings:
        name: "hidden_neurons"
        low: 1
        high: 10000
    model:batch_size:
      type: "int"
      settings:
        name: "batch_size"
        low: 10
        high: 10000
    data:scaler_x:type:
      type: "categorical"
      settings:
        name: "scaler_x"
        choices: ["standard", "normalize", "symmetric", "quantile", "robust"]
    # data:scaler_y:type:
    #   type: "categorical"
    #   settings:
    #     name: "scaler_y"
    #     choices: ["standard", "normalize", "symmetric", "quantile", "robust"]
